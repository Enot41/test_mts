pipeline {
    agent any
    stages {
        stage ('Copy source code') {
            steps {
                 git branch: 'main', url: 'https://github.com/Enot41/test_mts.git'   
            }
        }
        stage ('Deploy to Kubernetes') {
            steps {
                sshagent(credentials: ['256ea17a-edd7-4b56-9494-365e58bb0c8a'], ignoreMissing: true) {
                    sh "scp -o StrictHostKeyChecking=no 3/service.yml gszi@192.168.137.147:/home/gszi/1"
                    sh "scp -o StrictHostKeyChecking=no 3/deployment.yml gszi@192.168.137.147:/home/gszi/1"
                    script {
                        try{
                            sh "ssh gszi@192.168.137.147 kubectl apply -f /home/gszi/1/."
                        }
                        catch(error){
                            sh "ssh gszi@192.168.137.147 kubectl apply -f /home/gszi/1."
                        }
                    }
                }
                
            }
        }
        stage ('Delete or No') {
            steps {
                script {
                    env.select = input message: 'Please enter YES or NO for delete container',
                                parameters: [string(defaultValue: '',
                                        description: '',
                                        name: 'YES or NO for delete container')]
                }
                script {
                    if (env.select == 'YES') {
                        sshagent(credentials: ['256ea17a-edd7-4b56-9494-365e58bb0c8a'], ignoreMissing: true) {
                        try{
                            sh "ssh gszi@192.168.137.147 kubectl delete -f /home/gszi/1/."
                        }
                        catch(error){
                            sh "ssh gszi@192.168.137.147 kubectl DELETE -f /home/gszi/1."
                        } 
                        }
                    }
                    else {
                        echo "Your don`t delete container"
                    }
                }
            }
        }
    }
}
